题目描述
实现删除字符串中出现次数最少的字符，若多个字符出现次数一样，则都删除。输出删除这些单词后的字符串，字符串中其它字符保持原来的顺序。
注意每个输入文件有多组输入，即多个字符串用回车隔开
输入描述:

字符串只包含小写英文字母,?不考虑非法输入，输入的字符串长度小于等于20个字节。
输出描述:

删除字符串中出现次数最少的字符后的字符串。
示例1
输入
复制
abcdd
输出
复制
dd

来自 <https://www.nowcoder.com/practice/05182d328eb848dda7fdd5e029a56da9?tpId=37&tqId=21246&tPage=2&rp=&ru=%2Fta%2Fhuawei&qru=%2Fta%2Fhuawei%2Fquestion-ranking> 
#include <iostream>
#include <unordered_map>

using namespace std;

//统计次数 ――> hash表

int main()
{
    string str;
    int minnum;
    unordered_map<char, int> hash;//在while循环外面 hash一直存在 多组输入 上一组数据还在
    while(cin >> str)
    {
        //初始化hash表
        for(int i = 0; i < str.size(); i ++)
            hash[str[i]] ++;
        
        minnum = hash[str[0]];
        //对比找到最小的
        for(int i = 0; i < str.size(); i ++)
            minnum = min(minnum, hash[str[i]]);
        
        //符合条件的输出
        for(int i = 0; i < str.size(); i ++)
            if(hash[str[i]] >  minnum)
                cout << str[i];
        
        cout << endl;
        
        for(int i = 0; i < str.size(); i ++)
            hash[str[i]] = 0;
        
    }
    
    return 0;
}

