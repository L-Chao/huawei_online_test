题目描述
问题描述：数独（Sudoku）是一款大众喜爱的数字逻辑游戏。玩家需要根据9X9盘面上的已知数字，推算出所有剩余空格的数字，并且满足每一行、每一列、每一个粗线宫内的数字均含1-9，并且不重复。
输入：
包含已知数字的9X9盘面数组[空缺位以数字0表示]
输出：
完整的9X9盘面数组
输入描述:

包含已知数字的9X9盘面数组[空缺位以数字0表示]
输出描述:

完整的9X9盘面数组
示例1
输入
复制
0 9 2 4 8 1 7 6 3
4 1 3 7 6 2 9 8 5
8 6 7 3 5 9 4 1 2
6 2 4 1 9 5 3 7 8
7 5 9 8 4 3 1 2 6
1 3 8 6 2 7 5 9 4
2 7 1 5 3 8 6 4 9
3 8 6 9 1 4 2 5 7
0 4 5 2 7 6 8 3 1
输出
复制
5 9 2 4 8 1 7 6 3
4 1 3 7 6 2 9 8 5
8 6 7 3 5 9 4 1 2
6 2 4 1 9 5 3 7 8
7 5 9 8 4 3 1 2 6
1 3 8 6 2 7 5 9 4
2 7 1 5 3 8 6 4 9
3 8 6 9 1 4 2 5 7
9 4 5 2 7 6 8 3 1

来自 <https://www.nowcoder.com/practice/78a1a4ebe8a34c93aac006c44f6bf8a1?tpId=37&tqId=21267&tPage=3&rp=&ru=%2Fta%2Fhuawei&qru=%2Fta%2Fhuawei%2Fquestion-ranking> 
#include <iostream>

using namespace std;

int num[9][9];
int flag = false;

//1.行不重复
//2.列不重复
//3. 3*3的宫格不重复
bool check(int n){
    int h = n / 9;
    int l = n % 9;
    
    for(int i = 0; i < 9 ; i ++)
        if(i != h && num[i][l] == num[h][l])//发现重复列 元素
            return false;
    
    for(int j = 0; j < 9; j ++)
        if(j != l && num[h][j] == num[h][l])//行重复
            return false;
    
    //3*3宫格 1-9
    for(int i = h/3*3; i < h/3*3 + 3; i ++)
        for(int j = l/3*3; j < l/3*3 + 3; j ++)
            if((i != h || j != l) && num[i][j] == num[h][l])
                return false;
    
    return true;
}


void dfs(int n){
    if(n == 81){
        //输出9宫格
        for(int i = 0; i < 9; i ++){
            for(int j = 0; j < 8; j ++){
                cout << num[i][j] << " ";
            }
            cout << num[i][8] << endl;
        }
        flag = true;
        return;
    }
    
    
    int h = n / 9;//行
    int l = n % 9;//列
    
    if(num[h][l] == 0){
        //填数字
        //回溯法/ 深度优先
        for(int i = 1; i <= 9; i ++){
            num[h][l] = i;//填数字
            if(check(n)){
                dfs(n + 1);
                if(flag == true)
                    return;
                num[h][l] = 0;
            }
        }
        num[h][l] = 0;
    }else{
        dfs(n + 1);
    }
}


int main(){
    //9宫格输入
    for(int i = 0; i < 9; i ++)
        for(int j = 0; j < 9; j ++)
            cin >> num[i][j];
    
    dfs(0);
    return 0;
}

